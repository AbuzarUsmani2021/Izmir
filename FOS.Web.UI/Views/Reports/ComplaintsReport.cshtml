@model FOS.Shared.KSBComplaintData
@{
    ViewBag.Title = "ComplaintsReport";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href='~/Content/Style/fullcalendar.min.css' rel='stylesheet' />
<link href='~/Content/Style/fullcalendar.print.min.css' rel='stylesheet' media='print' />
<script src='~/Scripts/lib/moment.min.js'></script>
<script src='~/Scripts/lib/jquery-ui.min.js'></script>
<script src='~/Scripts/lib/fullcalendar.min.js'></script>
<link href="~/Content/Style/jquery-ui.min.css" rel="stylesheet" />
<style>
    .ui-datepicker {
        width: 205px;
    }
</style>
<br />
<div class="row-fluid">
    <div class="span12">
        <div class="widget green" @*style="height:600px;"*@>
            <div class="widget-title text-center">
                <h4><strong>Complaint Summary Report</strong></h4>
            </div>
            @using (Ajax.BeginForm("ComplaintsReport", "Reports", new AjaxOptions { OnSuccess = "OnSuccess", OnFailure = "OnFailure" }, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()

        <div class="widget-body form-horizontal">
            <div class="span6">
                <div class="control-group">
                    <label class="control-label">Project:</label>
                    <div class="controls">
                        @Html.DropDownListFor(model => model.SOProjects, new SelectList(Model.SOProjects, "ID", "Name"))
                        @Html.HiddenFor(model => model.ProjectIDs)
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Zone:</label>
                    <div class="controls">
                        @Html.DropDownListFor(model => model.Cities, new SelectList(Model.Cities, "ID", "Name"))
                        @Html.HiddenFor(model => model.CitiesIDs)
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Towns:</label>
                    <div class="controls">
                        @Html.DropDownListFor(model => model.Areas, new SelectList(Model.Areas, "ID", "Name"))
                        @Html.HiddenFor(model => model.AreasIDs)
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Subdivisions:</label>
                    <div class="controls">
                        @Html.DropDownListFor(model => model.SubDivisions, new SelectList(Model.SubDivisions, "ID", "Name"))
                        @Html.HiddenFor(model => model.SubDivisionsIDs)
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Sites:</label>
                    <div class="controls">
                        @Html.DropDownListFor(model => model.Sites, new SelectList(Model.Sites, "ID", "Name"))
                        @Html.HiddenFor(model => model.SitesIDs)
                    </div>
                </div>
                <div class="control-group" style="margin-bottom: 14px;">
                    <label class="control-label">Starting Date:</label>
                    <div class="controls">
                        <input class="text-box single-line" id="StartingDate" name="StartingDate" autocomplete="off" placeholder="DD-MM-YYYY" style="height: 22px; width: 202px; margin-bottom: 0px;">
                    </div>
                </div>
            </div>
            <div class="span6">
                <div class="control-group" style="margin-bottom: 14px;">
                    <label class="control-label">Ending Date:</label>
                    <div class="controls">
                        <input class="text-box single-line" id="EndingDate" name="EndingDate" autocomplete="off" placeholder="DD-MM-YYYY" style="height: 22px; width: 202px; margin-bottom: 0px;">
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label"> Fault Type:</label>
                    <div class="controls">
                        @Html.DropDownListFor(model => model.faultTypes, new SelectList(Model.faultTypes, "Id", "Name"))
                        @Html.HiddenFor(model => model.FaultTypesIDs)

                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Complaint Status:</label>
                    <div class="controls">
                        @Html.DropDownListFor(model => model.complaintStatuses, new SelectList(Model.complaintStatuses, "Id", "Name"))
                        @Html.HiddenFor(model => model.complaintStatusesIDs)

                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Work Done Status:</label>
                    <div class="controls">
                        @Html.DropDownListFor(model => model.WorkDone, new SelectList(Model.WorkDone, "Id", "Name"))
                        @Html.HiddenFor(model => model.WorkDoneIDs)

                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Launched By:</label>
                    <div class="controls">
                        @Html.DropDownListFor(model => model.LaunchedBy, new SelectList(Model.LaunchedBy, "Id", "Name"))
                        @Html.HiddenFor(model => model.LaunchedByIDs)

                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Field officer:</label>
                    <div class="controls">
                        @Html.DropDownListFor(model => model.FieldOfficers, new SelectList(Model.FieldOfficers, "Id", "Name"))
                        @Html.HiddenFor(model => model.FieldOfficersIDs)

                    </div>
                </div>
            </div>

            <div class="span12 text-center" style=" margin: 0px;">
                <div class="control-group" style="border-top: 1px solid #e5e5e5;">
                    <div style="margin-top:10px;">
                        <button type="submit" id="GenerateReportInPDF" class="btn btn-primary"><i class="icon-ok icon-white"></i><strong> Generate in PDF</strong></button>
                        <button type="submit" id="" class="btn btn-primary"><i class="icon-ok icon-white"></i><strong> Generate in Excel</strong></button>
                        <button type="button" id="Reset" class="btn btn-info"><i class="icon-ban-circle icon-white"></i><strong> Reset</strong></button>
                    </div>
                </div>
            </div>
            


        </div>
            }
        </div>
    </div>
</div>


<script>

    $(document).ready(function () {

        $('#SOProjects').change(function () {
            $('#ProjectIDs').val($('#SOProjects').multipleSelect('getSelects'));
            $("#ProjectIDs").change();
        }).multipleSelect({
            filter: true
        });

        $('#Cities').change(function () {
            $('#CitiesIDs').val($('#Cities').multipleSelect('getSelects'));
        }).multipleSelect({
            filter: true
        });

        $('#Areas').change(function () {
            $('#AreasIDs').val($('#Areas').multipleSelect('getSelects'));
        }).multipleSelect({
            filter: true
        });

        $('#SubDivisions').change(function () {
            $('#SubDivisionsIDs').val($('#SubDivisions').multipleSelect('getSelects'));
        }).multipleSelect({
            filter: true
        });

        $('#Sites').change(function () {
            $('#SitesIDs').val($('#Sites').multipleSelect('getSelects'));
        }).multipleSelect({
            filter: true
        });

        $('#StartingDate').datepicker(
            {
                dateFormat: 'dd-M-yy',
                changeMonth: true,
                changeYear: true,
                yearRange: '1950:2100'
            });
        $('#EndingDate').datepicker(
            {
                dateFormat: 'dd-M-yy',
                changeMonth: true,
                changeYear: true,
                yearRange: '1950:2100'
            });

        $('#faultTypes').change(function () {
            $('#FaultTypesIDs').val($('#faultTypes').multipleSelect('getSelects'));
        }).multipleSelect({
            filter: true
        });

        $('#complaintStatuses').change(function () {
            $('#complaintStatusesIDs').val($('#complaintStatuses').multipleSelect('getSelects'));
        }).multipleSelect({
            filter: true
        });

        $('#WorkDone').change(function () {
            $('#WorkDoneIDs').val($('#WorkDone').multipleSelect('getSelects'));
        }).multipleSelect({
            filter: true
        });


        $('#LaunchedBy').change(function () {
            $('#LaunchedByIDs').val($('#LaunchedBy').multipleSelect('getSelects'));
        }).multipleSelect({
            filter: true
        });

        $('#FieldOfficers').change(function () {
            $('#FieldOfficersIDs').val($('#FieldOfficers').multipleSelect('getSelects'));
        }).multipleSelect({
            filter: true
        });



    });


    $("#ProjectIDs").change(function () {
       var ClientID = $("#ProjectIDs").val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetZoneFromProject", "Reports")",
            data: { ClientID: ClientID},
            success: function (json)
            {
                var $el = $("#Cities");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {
                    $el.append($("<option></option>").val(key.ID).text(key.Name));
                });
                $('#Cities').change(function () {
                    $('#CitiesIDs').val($('#Cities').multipleSelect('getSelects'));
                    $("#CitiesIDs").change();
                    $("#LaunchedByIDs").change();

                }).multipleSelect({
                    filter: true
                });
            }
        });
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetLaunchedByFromProject", "Reports")",
            data: { ClientID: ClientID},
            success: function (json)
            {
                if (json != null) {
                    var $el = $("#LaunchedBy");
                    $el.empty(); // remove old options
                    $.each(json, function (value, key) {
                        $el.append($("<option></option>").val(key.ID).text(key.Name));
                    });
                    $('#LaunchedBy').change(function () {
                        $('#LaunchedByIDs').val($('#LaunchedBy').multipleSelect('getSelects'));
                    }).multipleSelect({
                        filter: true
                    });
                }

            }
         });
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetFieldOfficerFromProject", "Reports")",
            data: { ClientID: ClientID},
            success: function (json)
            {
                if (json != null) {
                    var $el = $("#FieldOfficers");
                    $el.empty(); // remove old options
                    $.each(json, function (value, key) {
                        $el.append($("<option></option>").val(key.ID).text(key.Name));
                    });
                    $('#FieldOfficers').change(function () {
                        $('#FieldOfficersIDs').val($('#FieldOfficers').multipleSelect('getSelects'));
                    }).multipleSelect({
                        filter: true
                    });
                }

            }
        });

    });

    $("#CitiesIDs").change(function () {
        var ClientID = $("#CitiesIDs").val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetTownFromZone", "Reports")",
            data: { ClientID: ClientID},
            success: function (json)
            {
                var $el = $("#Areas");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {
                    $el.append($("<option></option>").val(key.ID).text(key.Name));
                });
                $('#Areas').change(function () {
                    $('#AreasIDs').val($('#Areas').multipleSelect('getSelects'));
                    //$("#AreasIDs").change();
                }).multipleSelect({
                    filter: true
                });
            }
        });
    });

    $("#Areas").change(function () {
        var ClientID = $("#AreasIDs").val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetSubdivisionFromTown", "Reports")",
            data: { ClientID: ClientID},
            success: function (json)
            {
                var $el = $("#SubDivisions");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {
                    $el.append($("<option></option>").val(key.ID).text(key.Name));
                });
                $('#SubDivisions').change(function () {
                    $('#SubDivisionsIDs').val($('#SubDivisions').multipleSelect('getSelects'));
                    //$("#SubDivisionsIDs").change();
                }).multipleSelect({
                    filter: true
                });
            }
        });
    });

    $("#SubDivisions").change(function () {
        var ClientID = $("#SubDivisionsIDs").val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetSiteFromSubdivision", "Reports")",
            data: { ClientID: ClientID},
            success: function (json)
            {
                if (json.length != 0)
                {
                    var $el = $("#Sites");
                    $el.empty(); // remove old options
                    $.each(json, function (value, key) {
                        $el.append($("<option></option>").val(key.ID).text(key.Name));
                    });

                    $('#Sites').change(function () {
                        $('#SitesIDs').val($('#Sites').multipleSelect('getSelects'));
                        //$("#complaintStatusesIDs").change();
                    }).multipleSelect({
                        filter: true
                    });
                }

            }
        });
    });

    $("#complaintStatuses").change(function () {
        var ClientID = $("#FaultTypesIDs").val();
        var ClientId = $("#complaintStatusesIDs").val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetWorkDoneFromStatus", "Reports")",
            data: {
                ClientID: ClientID,
                Name: ClientId
                },
            success: function (json)
            {
                if (json.length != 0) {
                    var $el = $("#WorkDone");
                    $el.empty(); // remove old options
                    $.each(json, function (value, key) {
                        $el.append($("<option></option>").val(key.ID).text(key.Name));
                    });

                    $('#WorkDone').change(function () {
                        $('#WorkDoneIDs').val($('#WorkDone').multipleSelect('getSelects'));
                    }).multipleSelect({
                        filter: true
                    });
                }

            }
        });
    });




    $('#GenerateReportInPDF').click(function () {

       window.open("@Url.Action("GetComplaintsReport", "Reports")"+"?SitesIDs=" + $("#SitesIDs").val() + "&StartingDate=" + $("#StartingDate").val() + "&EndingDate=" + $("#EndingDate").val() + "&FaultTypesIDs=" + $("#FaultTypesIDs").val() + "&complaintStatusesIDs=" + $("#complaintStatusesIDs").val() + "&WorkDoneIDs=" + $("#WorkDoneIDs").val() + "&LaunchedByIDs=" + $("#LaunchedByIDs").val() + "&FieldOfficersIDs=" + $("#FieldOfficersIDs").val());
    });





    @*$('#btnNew').click(function () {

        debugger;
        //var message = "";
        //for (i = 0; i < sPainters.length ; i++) {
        //    message += sPainters[i] + ",";
        //}
        //var $Shoptypeid = $("#Shoptypeid").val();
        debugger;
        var $sdate = $("#StartingDate1").val();
        var $edate = $("#StartingDate2").val();
        var $TID = $("#ClientID").val();
        var $fosid = $("#SaleOfficerID").val();
        var $cityid = $("#CityID").val();
        var $areaid = $("#AreaID").val();-->-->
            if ($("#cbCheck1").is(':checked') == true) {
                window.open("@Url.Action("CityMonthWiseIntakeReport", "Retailer")" + "?StartingDate=" + $("#StartingDate1").val() + "&EndingDate=" + $("#StartingDate2").val() + "&TID=" + $("#TID").val() + "&Shoptypeid=" + $("#Shoptypeid").val() + "&message=" + message + "", "_top");
            }
        <!--<!--//else {
        window.open("@Url.Action("ComplaintSummaryrpt", "Reports")" + "?ProjectID=" + $("#ProjectId").val() + "&CityID=" + $("#CityID").val()  + "&FaulttypeID=" + $("#FaulttypeId").val() + "&StatusID=" + $("#StatusID").val() + "&WorkDoneID=" + $("#WorkDoneID").val() + "&SaleOfficerID=" + $("#SaleOfficerID").val() + "&FieldOfficerID=" + $("#FieldOfficerID").val()+ "&sdate=" + $sdate+"&edate=" + $edate);
        //}
    });*@






    $("#Reset").click(function () {
        ClearForm();

    });

    function ClearForm() {
        $('#DateFrom').val("");
        $('#DateTo').val("");
        $('#ProjectId').val(0);
        $('#CityID').val(0);
        $('#FaulttypeId').val(0);
        $('#StatusID').val(0);
        $('#WorkDoneID').val(0);
        $('#SaleOfficerID').val(0);
        $('#FieldOfficerID').val(0);
    }


    function OnSuccess(response)
    {
        if (response == "1")
        {
            alertify.success("Report has Successfully Generated.");
            ClearForm();
        }
        else if (response == "0")
        {
            alertify.error("Unable To Generate Report.");
        }


    }

    function OnFailure(response) {
        if (response.status == 422) {
            var errors = JSON.parse(response.responseText);
            alertify.error(errors.errors);
        }
        else {
            alertify.error(response);
        }
    }


</script>

