@model FOS.Shared.KSBComplaintData
@{
    ViewBag.Title = "Add New Complaint | WASA LAHORE";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    #map-canvas {
        width: 100%;
        height: 474px;
    }
</style>

<!-- BEGIN PAGE HEADER-->
<div class="row-fluid">
    <div class="span12">
        <h3 class="page-title"></h3>
        <ul class="breadcrumb">
            <li>
                <a href="@Url.Action("NewComplaint", "Complaint") ">Complaint</a>
                <span class="divider">/</span>
            </li>
            <li>
                <a href="">New Complaint</a>
            </li>
        </ul>
        <!-- END PAGE TITLE & BREADCRUMB-->
    </div>
</div>

<div class="row-fluid">
    <div class="span12">
        <!-- BEGIN EXAMPLE TABLE widget-->
        <div class="widget green">

            <div class="widget-title text-center">
                <h4><strong>Add New Complaint</strong></h4>
            </div>

            <div class="widget-body" style="">
                <div>
                    <div class="clearfix">
                        <div class="btn-group pull-right"></div>
                    </div>
                    @using (Html.BeginForm("NewComplaint", "Complaint", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {

                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)

                        <div class="form-group">

                            <div class="span12">

                                <div class="span3" style="margin-top: 0px;">



                                    <!-- Select RegionalHead -->
                                    <div class="control-group hidden" style="margin-bottom: 10px">
                                        <label class="control-label">Select Client: *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.DropDownListFor(model => model.ClientId, new SelectList(Model.Client, "ID", "Name"), new { @disabled = "disabled", @Value = "27" })
                                            @Html.ValidationMessageFor(model => model.ClientId)
                                            @Html.HiddenFor(model => model.ClientId)
                                        </div>

                                    </div>


                                    <div class="control-group" style="margin-bottom: 10px">
                                        <label class="control-label">Select Project:*</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.DropDownListFor(model => model.ProjectId, new SelectList(Model.SaleOfficers, "ID", "Name"), new { @class = "" })
                                            @Html.HiddenFor(model => model.ProjectId)
                                            @Html.ValidationMessageFor(model => model.ProjectId)
                                        </div>
                                    </div>


                                    <div class="control-group" style="margin-bottom: 10px">
                                        <label class="control-label">Select Zone: *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.DropDownListFor(model => model.CityID, new SelectList(Model.Cities, "ID", "Name"), new { @class = "" })
                                            @Html.ValidationMessageFor(model => model.CityID)
                                        </div>
                                    </div>

                                    <div class="control-group" style="margin-bottom: 10px">
                                        <label class="control-label">Select Town: *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.DropDownListFor(model => model.AreaID, new SelectList(Model.Areas, "ID", "Name"), new { @class = "Areas" })
                                            @Html.HiddenFor(model => model.AreaID)
                                        </div>
                                    </div>

                                    <div class="control-group" style="margin-bottom: 10px">
                                        <label class="control-label">Select Sub Division: *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.DropDownListFor(model => model.SubDivisionID, new SelectList(Model.SubDivisions, "ID", "Name"), new { @class = "Areas" })
                                            @Html.HiddenFor(model => model.SubDivisionID)
                                        </div>
                                    </div>


                                    <div class="control-group" style="margin-bottom: 10px">
                                        <label class="control-label">Select Site: *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.DropDownListFor(model => model.SiteId, new SelectList(Model.Areas, "ID", "Name"), new { @class = "Areas" })
                                            @Html.HiddenFor(model => model.SiteId)
                                        </div>
                                    </div>
                                    <div class="control-group" style="margin-bottom: 10px">
                                        <label class="control-label">Site ID: *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.TextBoxFor(model => model.DisableSiteID, new { placeholder = "Selct Site First:" })
                                        </div>
                                    </div>




                                </div>

                                <div class="span3" style="margin-top: 0px;">


                                    @*<div class="control-group hidden" style="margin-bottom: 10px; padding-top:0px;">
                                            <label class="control-label">Launched By: *</label>
                                            <div class="controls" style="margin-left: 0px">
                                                @Html.DropDownListFor(model => model.LaunchedByID, new SelectList(Model.LaunchedBy, "ID", "Name"), new { @class = "Areas" })
                                                @Html.HiddenFor(model => model.LaunchedByID)
                                            </div>
                                        </div>*@

                                    <div class="control-group" style="margin-bottom: 10px">
                                        <label class="control-label">Select Fault Type: *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.DropDownListFor(model => model.FaulttypeId, new SelectList(Model.faultTypes, "Id", "Name"), new { @class = "Areas" })
                                            @Html.HiddenFor(model => model.FaulttypeId)
                                        </div>
                                    </div>
                                    <div class="control-group" style="margin-bottom: 10px">
                                        <label class="control-label">Select Fault Type Detail: *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.DropDownListFor(model => model.FaulttypeDetailId, new SelectList(Model.faultTypesDetail, "Id", "Name"), new { @class = "Areas" })
                                            @Html.HiddenFor(model => model.FaulttypeDetailId)
                                        </div>
                                    </div>
                                    @*<div class="control-group hidden" style="margin-bottom: 0px">
                                            <label class="control-label" style="">Other Remarks</label>
                                            <div class="controls" style="margin-left: 0px">
                                                @Html.EditorFor(model => model.FaultTypeDetailOtherRemarks)
                                            </div>
                                        </div>
                                        <div class="control-group hidden" style="margin-bottom: 10px">
                                            <label class="control-label">Select Priority *</label>
                                            <div class="controls" style="margin-left: 0px">
                                                @Html.DropDownListFor(model => model.PriorityId, new SelectList(Model.priorityDatas, "ID", "Name"), new { @class = "Areas" })
                                                @Html.HiddenFor(model => model.PriorityId)
                                            </div>
                                        </div>
                                        <div class="control-group hidden" style="margin-bottom: 10px">
                                            <label class="control-label">Select Status: *</label>
                                            <div class="controls" style="margin-left: 0px">
                                                @Html.DropDownListFor(model => model.StatusID, new SelectList(Model.complaintStatuses, "ID", "Name"), new { @class = "Areas", @Value = "2003" })
                                                @Html.HiddenFor(model => model.StatusID)
                                            </div>
                                        </div>*@
                                    @*<div class="control-group hidden" style="margin-bottom: 10px">
                                            <label class="control-label">Complaint Type *</label>
                                            <div class="controls" style="margin-left: 0px">
                                                @Html.DropDownListFor(model => model.ComplaintTypeID, new SelectList(Model.ComplaintTypes, "ID", "Name"), new { @class = "Areas" })
                                                @Html.HiddenFor(model => model.ComplaintTypeID)
                                            </div>
                                        </div>
                                        <div class="control-group hidden" style="margin-bottom: 10px">
                                            <label class="control-label">Progress Status *</label>
                                            <div class="controls" style="margin-left: 0px">
                                                @Html.DropDownListFor(model => model.ProgressStatusId, new SelectList(Model.ProgressStatus, "ID", "Name"), new { @class = "Areas" })
                                                @Html.HiddenFor(model => model.ProgressStatusId)
                                            </div>
                                        </div>
                                        <div class="control-group hidden" style="margin-bottom: 0px">
                                            <label class="control-label" style="">Progress Status Remarks</label>
                                            <div class="controls" style="margin-left: 0px">
                                                @Html.EditorFor(model => model.ProgressStatusOtherRemarks)
                                            </div>
                                        </div>*@
                                    <div class="control-group" style="margin-bottom: 0px">
                                        <label class="control-label" style="">Person Name:</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.TextBoxFor(model => model.Name, new { placeholder = "Enter Contact Person Name:" })
                                        </div>
                                    </div>
                                    <div class="control-group" style="margin-bottom: 10px; padding-top:20px;">
                                        <label class="control-label" style="">Complaint initial Remarks:</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.TextAreaFor(model => model.Remarks, new { @style = "height:170px; width:202px; margin: 0px 0px 10px;", placeholder = "Enter Issue:" })
                                        </div>
                                    </div>






                                </div>



                                <div class="span3" style="margin-top: 0px;">

                                    <div class="control-group" style="margin-bottom: 0px">
                                        <label class="control-label" style="">Picture1:</label>
                                        <input type="file" name="file1" id="file1"><br>
                                        <img id="blah" src="~/Images/no-image-available.png.jpg" width="100px" alt="your image" />
                                    </div>
                                    <div class="control-group" style="margin-bottom: 0px;padding-top: 4px;">
                                        <label class="control-label" style="">Picture2:</label>
                                        <input type="file" name="file2" id="file2"><br>
                                        <img id="blah1" src="~/Images/no-image-available.png.jpg" width="100px" alt="your image" />
                                    </div>
                                    <div class="control-group" style="margin-bottom: 0px;padding-top: 4px;">
                                        <label class="control-label" style="">Picture3:</label>
                                        <input type="file" name="file3" id="file3"><br>
                                        <img id="blah2" src="~/Images/no-image-available.png.jpg" width="100px" alt="your image" />
                                    </div>
                                    <div class="control-group" style="margin-top: -25px">
                                        <div class="form-actions" style="float: right; padding-left: 0px;  margin-top: 16px;">
                                            <button type="submit" id="btnNew" class="btn btn-primary" style="margin-right: 8px; width: 100px;">
                                                <span id="create">Save</span>
                                            </button>
                                            @* <button type="button" id="btnRefresh" class="btn btn-info"><i class="icon-ban-circle icon-white" style="padding-right: 8px"></i>Reset</button>*@
                                        </div>
                                    </div>


                                    <!-- Buttons -->



                                </div>


                                <div class="span3" style="margin-top: 0px;">



                                    <div class="control-group" style="margin-bottom: 0px">
                                        <label class="control-label" style="">Picture4:</label>
                                        <input type="file" name="file4" id="file4"><br>
                                        <img id="blah3" src="~/Images/no-image-available.png.jpg" width="100px" alt="your image" />
                                    </div>
                                    <div class="control-group" style="margin-bottom: 0px;padding-top: 4px;">
                                        <label class="control-label" style="">Picture5:</label>
                                        <input type="file" name="file5" id="file5"><br>
                                        <img id="blah4" src="~/Images/no-image-available.png.jpg" width="100px" alt="your image" />
                                    </div>

                                    <div class="control-group" style="margin-bottom: 0px;padding-top: 4px;">
                                        <label class="control-label" style="">Upload a Video:</label>
                                        <input type="file" name="file6" id="file6"><br>
                                        <img id="blah5" src="~/Images/no-image-available.png.jpg" width="100px" alt="your image" />

                                    </div>







                                    <!-- Buttons -->



                                </div>

                            </div>

                        </div>

                    }

                </div>
            </div>

        </div>
        <!-- END EXAMPLE TABLE widget-->
    </div>
</div>

@*<script src="https://maps.googleapis.com/maps/api/js"></script>*@
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB7X3GhN_ShrwYqU1Wc0gJbX3CMOMPZIs4"></script>

<script>

    $("#file1").change(function () {
        readURL(this);
    });
    $("#file2").change(function () {
        readURL1(this);
    });
    $("#file3").change(function () {
        readURL2(this);
    });
    $("#file4").change(function () {
        readURL3(this);
    });
    $("#file5").change(function () {
        readURL4(this);
    });
    $("#file6").change(function () {
        readURL5(this);
    });

    function readURL(input) {

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#blah').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }
    function readURL1(input) {

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#blah1').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }
    function readURL2(input) {

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#blah2').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }
    function readURL3(input) {

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#blah3').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }
    function readURL4(input) {

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#blah4').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    function readURL5(input) {

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#blah5').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    function LoadDealer() {

        var regionID = $("#SaleOfficerID").val();

        $.ajax({
            type: "POST",
            data: { id: regionID },
            url: "@Url.Action("GetDealerListBySaleOfficerID", "Retailer")",
            dataType: 'json',
            success: function (json) {
                var $el = $("#DealerID");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {
                    $el.append($("<option></option>")
                            .attr("value", key.ID).text(key.Name));
                });
            }
        });

    }

    function LoadCities(RegionalHeadID) {

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetZoneList", "Dealer")",
            data: { RegionID: RegionalHeadID },
            success: function (json) {

                var $el = $("#CityID");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {
                    $el.append($("<option></option>").val(key.ID).text(key.Name));

                });


                var $el = $("#AreaID");
                $el.empty(); // remove old options

                $("#CityID option:first").trigger("change");
                // GetAreaList($("#CityID option:first").val());
            }
        });
    }

    function LoadAreas(CityID) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetAreaListByCityID", "Dealer")",
            data: { CityID: CityID == null ? 0 : CityID },
            success: function (json) {

                var $el = $("#AreaID");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {
                    $el.append($("<option></option>").val(key.ID).text(key.Name));
                });
            }

        });
    }


    function LoadSubDivision(CityID) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetSubDivisionListByAreaID", "Dealer")",
            data: { CityID: CityID == null ? 0 : CityID },
            success: function (json) {

                var $el = $("#SubDivisionID");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {
                    $el.append($("<option></option>").val(key.ID).text(key.Name));
                });
            }

        });
    }



    $(document).ready(function () {
        $("#FaultTypeDetailOtherRemarks").hide();
        $("#ProgressStatusOtherRemarks").hide();
        $("#liRetailer,#liManageRetailer").addClass("active");
        $('#DisableSiteID').attr('disabled', 'disabled');
        var WriteCheck = "0";

        if (WriteCheck == "@HttpContext.Current.Session["WriteCheck"]") {
            // $("#btnNew").css("display", "none");
            $("#btnNew").attr("disabled", true);
        }
        else {
        }

        $("#ClientId").change(function () {

            LoadProjects($(this).val());
            LoadDealers($(this).val());


        });

        $("#ProjectId").change(function () {

            LoadCities($(this).val());
        });

        $("#SubDivisionID").change(function () {

            LoadSites();
        });


        $("#SiteId").change(function () {

            LoadSiteID();
        });
        $("#FaulttypeId").change(function () {

            LoadFaultTypeDetails();
            LoadProgressStatusDetails();
        });

        $("#FaulttypeDetailId").change(function () {

            if ($("#FaulttypeDetailId").val() == '2002' || ("#FaulttypeDetailId").val() == '2003' || ("#FaulttypeDetailId").val() == '2004') //I'm supposing the "Other" option value is 0.
                $("#FaultTypeDetailOtherRemarks").show();
        });

        $("#ProgressStatusId").change(function () {

            if ($("#ProgressStatusId").val() == '1002' || ("#ProgressStatusId").val() == '1003' || ("#ProgressStatusId").val() == '1004') //I'm supposing the "Other" option value is 0.
                $("#ProgressStatusOtherRemarks").show();
        });

        function LoadProjects(ClientID) {

            try {
                $.ajax({
                    type: "POST",
                    data: { RegionalHeadID: ClientID },
                    url: "@Url.Action("GetAllProjects", "Job")",
                    success: function (json) {

                        var $el = $("#ProjectId");
                        $el.empty(); // remove old options
                        $.each(json, function (value, key) {
                            $el.append($("<option></option>")
                                .val(key.ID).text(key.Name));
                        });
                    }

                });
            } catch (e) {
            }

        }

        function LoadDealers(RegionalHeadID) {

            try {
                $.ajax({
                    type: "POST",
                    data: { RegionalHeadID: RegionalHeadID },
                    url: "@Url.Action("GetAllDealersListRelatedToRegionalHead", "Dealer")",
                    success: function (json) {

                        var $el = $("#DealerID");
                        $el.empty(); // remove old options
                        $.each(json, function (value, key) {
                            $el.append($("<option></option>")
                                    .val(key.ID).text(key.Name));
                        });
                    }

                });
            } catch (e) {
            }

        }


        function LoadFaultTypeDetails() {
            var ClientID = $("#FaulttypeId").val();

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetFaultTypeDetailList", "Complaint")",
            data: { ClientID: ClientID},
            success: function (json) {

                var $el = $("#FaulttypeDetailId");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {
                    $el.append($("<option></option>").val(key.ID).text(key.Name));
                });


            }
        });
        }


        function LoadProgressStatusDetails() {
            var ClientID = $("#FaulttypeId").val();

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetProgressDetailList", "Complaint")",
            data: { ClientID: ClientID},
            success: function (json) {

                var $el = $("#ProgressStatusId");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {
                    $el.append($("<option></option>").val(key.ID).text(key.Name));
                });


            }
        });
    }



        function LoadSiteID() {
            var ClientID = $("#SiteId").val();

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetSiteId", "Complaint")",
            data: { ClientID: ClientID},
            success: function (json) {

                $('#DisableSiteID').val(json);


            }
        });
    }





          function LoadSites() {
              var ClientID = $("#ClientId").val();
              var ProjectID = $("#ProjectId").val();
              var CityID = $("#CityID").val();
              var AreaID = $("#AreaID").val();
              var SubDevID = $("#SubDivisionID").val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetSitesList", "Complaint")",
            data: { ClientID: ClientID, ProjectID: ProjectID, CityID: CityID, AreaID: AreaID, SubDivisionID: SubDevID},
            success: function (json) {

                var $el = $("#SiteId");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {
                    $el.append($("<option></option>").val(key.ID).text(key.Name));
                });


            }
        });
    }

        $("#CityID").change(function () {
            LoadAreas($(this).val());
        });

        $("#AreaID").change(function () {
            LoadSubDivision($(this).val());
        });

        $("#btnRefresh").click(function () {
            ClearForm();
        });

    });

    $(document).ajaxComplete(function () {

    });
</script>
<script type="text/javascript">

    function ClearForm() {
        $('#Name').val('');
        $('#ShopName').val('');
        $('#LocationMargin').val('');
        $('#Phone1').val('');
        $('#Phone2').val('');
        $('#ID').val(0);
        $('#BankName2').val('');
        $('#Account2').val('');
        $('#Address').val('');
        $('#RetailerCode').val('');
        $('#LandLineNo').val('');



    }

    function OnSuccess(response) {
        debugger
        if (response == "1") {
            alertify.success("Complaint Saved Successfully");
            ClearForm();
            $('.close').trigger('click');
        }
        else if (response == "2") {
            alertify.error("Phone Number Already Exist.");
        }
        else if (response == "3") {
            alertify.error("CNIC Already Exist");
        }
        else if (response == "4") {
            alertify.error("Account No Already Exist");
        }
        else if (response == "5") {
            alertify.error("Card No Already Exist");
        }
        else {
            alertify.error("Unable To Save");
        }

    }

    function OnFailure(response) {
        if (response.status == 422) {
            var errors = JSON.parse(response.responseText);
            alertify.error(errors.errors);
        }
        else {
            alertify.error(response);
        }
    }
</script>